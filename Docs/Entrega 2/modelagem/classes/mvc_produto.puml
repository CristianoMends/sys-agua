@startuml Produto

skin rose

title Diagrama de Classes MVC - Produto

package "Visão (View)" {
    class TelaListagemProduto <<view>> {
        + exibirListaProdutos(produtos: List<Produto>): void
        + solicitarSelecaoProduto(): int
    }

    class TelaFormularioCadastroProduto <<view>> {
        + exibirFormulario(): void
        + obterDadosProduto(): Produto
    }

    class TelaFormularioAtualizacaoProduto <<view>> {
        + exibirFormulario(produto: Produto): void
        + obterDadosAtualizados(): Produto
    }

    class TelaConfirmacaoDelecaoProduto <<view>> {
        + exibirMensagemConfirmacao(produto: Produto): boolean
    }
}

package "Controle (Controller)" {
    class ProdutoController <<controller>> {
        + cadastrarProduto(produto: Produto): boolean
        + atualizarProduto(produto: Produto): boolean
        + deletarProduto(id: int): boolean
        + buscarProdutoPorId(id: int): Produto
        + listarProdutos(): List<Produto>
    }
}

package "Modelo (Model)" {
    class Produto <<model>> {
        - id: int
        - nome: String
        - unidade: String
        - precoUnitario: double
        - custo: double
        - marca: String
        - linha: String
    }
}

package "Repositório (Repository)" {
    class RepositorioProduto <<repository>> {
        + save(produto: Produto): void
        + delete(id: int): void
        + findById(id: int): Produto
        + findAll(): List<Produto>
    }
}

'TelaListagemProduto relaciona com o ProdutoController
TelaListagemProduto --> ProdutoController: "solicita listagem"

'TelaFormularioCadastroProduto interage com ProdutoController
TelaFormularioCadastroProduto --> ProdutoController: "solicita cadastro"

'TelaFormularioAtualizacaoProduto interage com ProdutoController
TelaFormularioAtualizacaoProduto --> ProdutoController: "solicita atualização"

'TelaConfirmacaoDelecaoProduto interage com ProdutoController
TelaConfirmacaoDelecaoProduto --> ProdutoController: "confirma deleção"

'ProdutoController acessa os dados do Produto
ProdutoController --> Produto: "manipula"

'ProdutoController interage com RepositorioProduto
ProdutoController --> RepositorioProduto: "salva, busca e deleta"

'Produto é persistido no RepositorioProduto
Produto <- RepositorioProduto: "manipula dados"

@enduml
